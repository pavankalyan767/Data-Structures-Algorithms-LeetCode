dp = {}
        
        # def solve(i,j):
        #     if i==j:
        #         return 0
        #     if (i,j) in dp:
        #         return dp[(i,j)]
                
        #     mini = 1e9
            
        #     for k in range(i,j):
        #         steps = arr[i-1]*arr[k]*arr[j] + solve(i,k) + solve(k+1,j)
                
        #         mini = min(steps,mini)
        #     dp[(i,j)] = mini
        #     return dp[(i,j)]
        # return solve(1,len(arr)-1)
        
        
        for i in range(1,N-1):
            dp[(i,i)]=0
        for i in range(N-1,0,-1):
            for j in range(i+1,N):
                mini = 1e9
                for k in range(i,j):
                    steps = arr[i-1]*arr[k]*arr[j]+dp.get((i,k),0)+dp.get((k+1,j),0)
                    mini = min(mini,steps)
                dp[(i,j)] = mini
        return dp.get((1,len(arr)-1),0)

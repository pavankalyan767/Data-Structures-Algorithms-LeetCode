"""
2270. Number of Ways to Split Array
Solved
Medium
Topics
Companies
Hint
You are given a 0-indexed integer array nums of length n.

nums contains a valid split at index i if the following are true:

The sum of the first i + 1 elements is greater than or equal to the sum of the last n - i - 1 elements.
There is at least one element to the right of i. That is, 0 <= i < n - 1.
Return the number of valid splits in nums.

 

Example 1:

Input: nums = [10,4,-8,7]
Output: 2
Explanation: 
There are three ways of splitting nums into two non-empty parts:
- Split nums at index 0. Then, the first part is [10], and its sum is 10. The second part is [4,-8,7], and its sum is 3. Since 10 >= 3, i = 0 is a valid split.
- Split nums at index 1. Then, the first part is [10,4], and its sum is 14. The second part is [-8,7], and its sum is -1. Since 14 >= -1, i = 1 is a valid split.
- Split nums at index 2. Then, the first part is [10,4,-8], and its sum is 6. The second part is [7], and its sum is 7. Since 6 < 7, i = 2 is not a valid split.
Thus, the number of valid splits in nums is 2.
Example 2:

Input: nums = [2,3,1,0]
Output: 2
Explanation: 
There are two valid splits in nums:
- Split nums at index 1. Then, the first part is [2,3], and its sum is 5. The second part is [1,0], and its sum is 1. Since 5 >= 1, i = 1 is a valid split. 
- Split nums at index 2. Then, the first part is [2,3,1], and its sum is 6. The second part is [0], and its sum is 0. Since 6 >= 0, i = 2 is a valid split.
 

Constraints:

2 <= nums.length <= 105
-105 <= nums[i] <= 105


"""


"""
Approach 
1. generate a prefix_sum array and suffix_sum array 
2. since i have to compare the sum of the left partition to the sum of the right partition and also ensure 
3. that there are atleast one ore more elements in the right partition 
4. check for prefix_sum[i] and suffix_xum[i+1] ie sum of all elements in the first partition 
5. and sum of all elements in the second partition 
"""

class Solution:
    def waysToSplitArray(self, nums: List[int]) -> int:

        prefix = [nums[0]]
        suffix = [nums[-1]]



        for i in range(1,len(nums)):
            prefix.append(prefix[-1]+nums[i])

        for i in range(len(nums)-2,-1,-1):
            suffix.append(suffix[-1]+nums[i])


        suffix = suffix[::-1]

        count = 0
        for i in range(len(prefix)-1):
            if prefix[i]>=suffix[i+1]:
                count+=1
        return count


        
        
